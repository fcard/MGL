use crate::event::*;
use crate::compiler::gmx::field_value::*;


pub fn event_info(event: &Event) -> (usize, &'static str, String) {
  use Event::*;
  use KeyCode     as K;
  use MouseAction as M;
  use OtherEvent  as O;
  use DrawKind    as D;

  if let Event::Collision(value) = event {
    (4, "ename", value.to_scoped_gmx_value("object"))

  } else {

    let (ty, value) = match event {
      Create                         => (0, 0),
      Destroy                        => (1, 0),
      Alarm(a)                       => (2, *a as usize),
      Step(s)                        => (3, *s as usize),
      Keyboard(K::NoKey)             => (5, 0),
      Keyboard(K::AnyKey)            => (5, 1),
      Keyboard(K::Backspace)         => (5, 8),
      Keyboard(K::Tab)               => (5, 9),
      Keyboard(K::Enter)             => (5, 13),
      Keyboard(K::Shift)             => (5, 16),
      Keyboard(K::Control)           => (5, 17),
      Keyboard(K::Alt)               => (5, 18),
      Keyboard(K::Escape)            => (5, 27),
      Keyboard(K::Space)             => (5, 32),
      Keyboard(K::PageUp)            => (5, 33),
      Keyboard(K::PageDown)          => (5, 34),
      Keyboard(K::End)               => (5, 35),
      Keyboard(K::Home)              => (5, 36),
      Keyboard(K::Left)              => (5, 37),
      Keyboard(K::Up)                => (5, 38),
      Keyboard(K::Right)             => (5, 39),
      Keyboard(K::Down)              => (5, 40),
      Keyboard(K::PrintScreen)       => (5, 44),
      Keyboard(K::Insert)            => (5, 45),
      Keyboard(K::Delete)            => (5, 46),
      Keyboard(K::NumPad0)           => (5, 96),
      Keyboard(K::NumPad1)           => (5, 97),
      Keyboard(K::NumPad2)           => (5, 98),
      Keyboard(K::NumPad3)           => (5, 99),
      Keyboard(K::NumPad4)           => (5, 100),
      Keyboard(K::NumPad5)           => (5, 101),
      Keyboard(K::NumPad6)           => (5, 102),
      Keyboard(K::NumPad7)           => (5, 103),
      Keyboard(K::NumPad8)           => (5, 104),
      Keyboard(K::NumPad9)           => (5, 105),
      Keyboard(K::Multiply)          => (5, 106),
      Keyboard(K::Add)               => (5, 107),
      Keyboard(K::Subtract)          => (5, 109),
      Keyboard(K::Decimal)           => (5, 110),
      Keyboard(K::Divide)            => (5, 111),
      Keyboard(K::F1)                => (5, 112),
      Keyboard(K::F2)                => (5, 113),
      Keyboard(K::F3)                => (5, 114),
      Keyboard(K::F4)                => (5, 115),
      Keyboard(K::F5)                => (5, 116),
      Keyboard(K::F6)                => (5, 117),
      Keyboard(K::F7)                => (5, 118),
      Keyboard(K::F8)                => (5, 119),
      Keyboard(K::F9)                => (5, 120),
      Keyboard(K::F10)               => (5, 121),
      Keyboard(K::F11)               => (5, 122),
      Keyboard(K::F12)               => (5, 123),
      Keyboard(K::LeftShift)         => (5, 160),
      Keyboard(K::RightShift)        => (5, 161),
      Keyboard(K::LeftControl)       => (5, 162),
      Keyboard(K::RightControl)      => (5, 163),
      Keyboard(K::LeftAlt)           => (5, 164),
      Keyboard(K::RightAlt)          => (5, 165),
      Keyboard(K::Character(c))      => (5, c.to_ascii_uppercase() as usize),
      Mouse(M::LeftButton)           => (6, 0),
      Mouse(M::RightButton)          => (6, 1),
      Mouse(M::MiddleButton)         => (6, 2),
      Mouse(M::NoButton)             => (6, 3),
      Mouse(M::LeftPress)            => (6, 4),
      Mouse(M::RightPress)           => (6, 5),
      Mouse(M::MiddlePress)          => (6, 6),
      Mouse(M::LeftRelease)          => (6, 7),
      Mouse(M::RightRelease)         => (6, 8),
      Mouse(M::MiddleRelease)        => (6, 9),
      Mouse(M::MouseEnter)           => (6, 10),
      Mouse(M::MouseLeave)           => (6, 11),
      Mouse(M::MouseWheelUp)         => (6, 60),
      Mouse(M::MouseWheelDown)       => (6, 61),
      Mouse(M::GlobalLeftButton)     => (6, 50),
      Mouse(M::GlobalRightButton)    => (6, 51),
      Mouse(M::GlobalMiddleButton)   => (6, 52),
      Mouse(M::GlobalLeftPress)      => (6, 53),
      Mouse(M::GlobalRightPress)     => (6, 54),
      Mouse(M::GlobalMiddlePress)    => (6, 55),
      Mouse(M::GlobalLeftRelease)    => (6, 56),
      Mouse(M::GlobalRightRelease)   => (6, 57),
      Mouse(M::GlobalMiddleRelease)  => (6, 58),
      Other(O::RoomOutside)          => (7, 0),
      Other(O::RoomBoundary)         => (7, 1),
      Other(O::GameStart)            => (7, 2),
      Other(O::GameEnd)              => (7, 3),
      Other(O::RoomStart)            => (7, 4),
      Other(O::RoomEnd)              => (7, 5),
      Other(O::NoMoreLives)          => (7, 6),
      Other(O::AnimationEnd)         => (7, 7),
      Other(O::EndOfPath)            => (7, 8),
      Other(O::NoMoreHealth)         => (7, 9),
      Other(O::User0)                => (7, 10),
      Other(O::User1)                => (7, 11),
      Other(O::User2)                => (7, 12),
      Other(O::User3)                => (7, 13),
      Other(O::User4)                => (7, 14),
      Other(O::User5)                => (7, 15),
      Other(O::User6)                => (7, 16),
      Other(O::User7)                => (7, 17),
      Other(O::User8)                => (7, 18),
      Other(O::User9)                => (7, 19),
      Other(O::User10)               => (7, 20),
      Other(O::User11)               => (7, 21),
      Other(O::User12)               => (7, 22),
      Other(O::User13)               => (7, 23),
      Other(O::User14)               => (7, 24),
      Other(O::User15)               => (7, 25),
      Other(O::CloseButton)          => (7, 30),
      /*
      Other(O::ViewOutside0)         => (7, 40),
      Other(O::ViewOutside1)         => (7, 41),
      Other(O::ViewOutside2)         => (7, 42),
      Other(O::ViewOutside3)         => (7, 43),
      Other(O::ViewOutside4)         => (7, 44),
      Other(O::ViewOutside5)         => (7, 45),
      Other(O::ViewOutside6)         => (7, 46),
      Other(O::ViewOutside7)         => (7, 47),
      Other(O::ViewBoundary0)        => (7, 50),
      Other(O::ViewBoundary1)        => (7, 51),
      Other(O::ViewBoundary2)        => (7, 52),
      Other(O::ViewBoundary3)        => (7, 53),
      Other(O::ViewBoundary4)        => (7, 54),
      Other(O::ViewBoundary5)        => (7, 55),
      Other(O::ViewBoundary6)        => (7, 56),
      Other(O::ViewBoundary7)        => (7, 57),
      */
      Draw(D::Gui)                   => (8, 64),
      Draw(D::Begin)                 => (8, 72),
      Draw(D::End)                   => (8, 73),
      Draw(D::GuiBegin)              => (8, 74),
      Draw(D::GuiEnd)                => (8, 75),
      Draw(D::Pre)                   => (8, 76),
      Draw(D::Post)                  => (8, 77),

      _ => unreachable!()
    };

    (ty, "enumb", value.to_gmx_value())
  }
}

